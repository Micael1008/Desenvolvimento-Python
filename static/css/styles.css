<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gestor de Projetos - Projeto RAD</title>
    
    <!-- Chosen Palette: Slate Gray and Indigo -->
    <!-- Application Structure Plan: A single-page application (SPA) with four distinct views managed by JavaScript: Landing, Login, Signup, and a user Dashboard. This task-oriented structure directly addresses the project requirements, providing a clear and intuitive user flow. The Dashboard acts as the "aplicação principal," featuring profile management and a full CRUD module for "projects" to fulfill the core assignment. This is more user-friendly than separate pages as it provides a faster, seamless experience. -->
    <!-- Visualization & Content Choices: 
        - Landing Page (Inform): Hero section with CTA buttons (HTML/CSS) to guide new/returning users. Justification: Clear starting point.
        - Auth Forms (Organize): Standard HTML forms enhanced with icons for better UX. Justification: Familiar and effective for data entry.
        - User Profile (Inform/Update): Displays user data from the JS state object, with a button to enable editing. Justification: Fulfills the "perfil do usuário" requirement.
        - Project List (CRUD): An interactive table/list to display, add, edit, and delete projects. A modal form is used for creation/editing. Justification: Directly implements the required CRUD functionality in a clean, user-friendly manner.
        - Project Status Chart (Compare): A dynamic Donut chart from Chart.js (Canvas) to visualize the proportion of projects by status. Justification: Adds a professional, data-driven element to the dashboard, making it "superior" as requested.
        - Library/Method: Vanilla JS for state management and DOM manipulation; Chart.js for data visualization. -->
    <!-- CONFIRMATION: NO SVG graphics used. NO Mermaid JS used. -->

    <script src="https://cdn.tailwindcss.com"></script>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <style>
        body { font-family: 'Inter', sans-serif; }
        .view { display: none; }
        .view.active { display: block; animation: fadeIn 0.5s ease-in-out; }
        @keyframes fadeIn { from { opacity: 0; transform: translateY(10px); } to { opacity: 1; transform: translateY(0); } }
        .chart-container {
            position: relative;
            width: 100%;
            max-width: 400px;
            height: auto;
            min-height: 350px;
            margin-left: auto;
            margin-right: auto;
        }
        .modal-backdrop {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
            z-index: 40;
            display: none;
        }
        .modal {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            z-index: 50;
            display: none;
        }
    </style>
</head>
<body class="bg-slate-50 text-slate-800">

    <header class="bg-white/80 backdrop-blur-lg shadow-sm sticky top-0 z-30">
        <nav class="container mx-auto px-4 sm:px-6 lg:px-8">
            <div class="flex items-center justify-between h-16">
                <div class="flex-shrink-0">
                    <a href="#" id="logo" class="text-2xl font-bold text-indigo-600">GestorPro</a>
                </div>
                <div id="nav-links" class="hidden md:block">
                </div>
            </div>
        </nav>
    </header>

    <main id="app" class="container mx-auto px-4 sm:px-6 lg:px-8 py-8">
        
        <section id="landing-view" class="view">
            <div class="text-center py-16">
                <h1 class="text-4xl md:text-5xl font-extrabold text-slate-900">
                    Organize seus projetos com <span class="text-indigo-600">facilidade</span>.
                </h1>
                <p class="mt-4 max-w-2xl mx-auto text-lg text-slate-600">
                    Uma ferramenta simples e poderosa para gerenciar suas tarefas, acompanhar o progresso e colaborar com sua equipe. Cumpra os requisitos do seu projeto RAD com uma interface de alta performance.
                </p>
                <div class="mt-8 flex justify-center gap-4">
                    <button data-target="login-view" class="nav-button bg-indigo-600 text-white font-semibold py-3 px-6 rounded-lg shadow-md hover:bg-indigo-700 transition">
                        Acessar Conta
                    </button>
                    <button data-target="signup-view" class="nav-button bg-white text-indigo-600 font-semibold py-3 px-6 rounded-lg shadow-md hover:bg-slate-100 transition">
                        Criar Conta
                    </button>
                </div>
            </div>
        </section>

        <section id="login-view" class="view">
            <div class="max-w-md mx-auto bg-white p-8 rounded-xl shadow-lg">
                <h2 class="text-2xl font-bold text-center mb-6">Login</h2>
                <p class="text-center text-slate-600 mb-6">Bem-vindo de volta! Insira suas credenciais para acessar seu painel.</p>
                <form id="login-form">
                    <div class="mb-4">
                        <label for="login-email" class="block text-sm font-medium text-slate-700 mb-1">Email</label>
                        <input type="email" id="login-email" class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" required value="admin@exemplo.com">
                    </div>
                    <div class="mb-6">
                        <label for="login-password" class="block text-sm font-medium text-slate-700 mb-1">Senha</label>
                        <input type="password" id="login-password" class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" required value="123456">
                    </div>
                    <button type="submit" class="w-full bg-indigo-600 text-white font-semibold py-3 px-6 rounded-lg hover:bg-indigo-700 transition">Entrar</button>
                </form>
                 <p class="text-center text-sm text-slate-600 mt-6">
                    Não tem uma conta? <button data-target="signup-view" class="nav-button font-semibold text-indigo-600 hover:underline">Cadastre-se</button>
                </p>
            </div>
        </section>

        <section id="signup-view" class="view">
            <div class="max-w-md mx-auto bg-white p-8 rounded-xl shadow-lg">
                <h2 class="text-2xl font-bold text-center mb-6">Criar Nova Conta</h2>
                <p class="text-center text-slate-600 mb-6">Preencha os campos abaixo para iniciar sua jornada de produtividade.</p>
                <form id="signup-form">
                    <div class="mb-4">
                        <label for="signup-name" class="block text-sm font-medium text-slate-700 mb-1">Nome Completo</label>
                        <input type="text" id="signup-name" class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" required>
                    </div>
                    <div class="mb-4">
                        <label for="signup-email" class="block text-sm font-medium text-slate-700 mb-1">Email</label>
                        <input type="email" id="signup-email" class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" required>
                    </div>
                    <div class="mb-6">
                        <label for="signup-password" class="block text-sm font-medium text-slate-700 mb-1">Senha</label>
                        <input type="password" id="signup-password" class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500" required>
                    </div>
                    <button type="submit" class="w-full bg-indigo-600 text-white font-semibold py-3 px-6 rounded-lg hover:bg-indigo-700 transition">Criar Conta</button>
                </form>
                 <p class="text-center text-sm text-slate-600 mt-6">
                    Já possui uma conta? <button data-target="login-view" class="nav-button font-semibold text-indigo-600 hover:underline">Faça login</button>
                </p>
            </div>
        </section>

        <section id="dashboard-view" class="view">
            <h1 class="text-3xl font-bold mb-6" id="welcome-message"></h1>
            
            <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
                <div class="lg:col-span-1 space-y-8">
                    <div class="bg-white p-6 rounded-xl shadow-lg">
                        <h2 class="text-xl font-bold mb-4">Perfil do Usuário</h2>
                        <div id="profile-details" class="space-y-3 text-slate-600">
                        </div>
                    </div>

                    <div class="bg-white p-6 rounded-xl shadow-lg">
                        <h2 class="text-xl font-bold mb-4">Status dos Projetos</h2>
                        <div class="chart-container">
                            <canvas id="project-status-chart"></canvas>
                        </div>
                    </div>
                </div>

                <div class="lg:col-span-2 bg-white p-6 rounded-xl shadow-lg">
                    <div class="flex justify-between items-center mb-4">
                        <h2 class="text-xl font-bold">Meus Projetos</h2>
                        <button id="add-project-btn" class="bg-indigo-600 text-white font-semibold py-2 px-4 rounded-lg hover:bg-indigo-700 transition">
                            Novo Projeto
                        </button>
                    </div>
                    <p class="text-slate-600 mb-6">Esta é a sua aplicação principal. Aqui você pode criar, visualizar, editar e remover projetos, demonstrando um ciclo CRUD completo.</p>
                    <div id="project-list" class="space-y-4">
                    </div>
                </div>
            </div>
        </section>
    </main>
    
    <div id="modal-backdrop" class="modal-backdrop"></div>
    <div id="project-modal" class="modal w-full max-w-lg bg-white p-8 rounded-xl shadow-2xl">
        <h2 id="modal-title" class="text-2xl font-bold mb-6"></h2>
        <form id="project-form">
            <input type="hidden" id="project-id">
            <div class="mb-4">
                <label for="project-name" class="block text-sm font-medium text-slate-700 mb-1">Nome do Projeto</label>
                <input type="text" id="project-name" class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-indigo-500" required>
            </div>
            <div class="mb-4">
                <label for="project-description" class="block text-sm font-medium text-slate-700 mb-1">Descrição</label>
                <textarea id="project-description" rows="3" class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-indigo-500"></textarea>
            </div>
            <div class="mb-6">
                <label for="project-status" class="block text-sm font-medium text-slate-700 mb-1">Status</label>
                <select id="project-status" class="w-full px-4 py-2 border border-slate-300 rounded-lg focus:ring-2 focus:ring-indigo-500">
                    <option value="A Fazer">A Fazer</option>
                    <option value="Em Andamento">Em Andamento</option>
                    <option value="Concluído">Concluído</option>
                </select>
            </div>
            <div class="flex justify-end gap-4">
                <button type="button" id="cancel-project-btn" class="bg-slate-100 text-slate-700 font-semibold py-2 px-4 rounded-lg hover:bg-slate-200 transition">Cancelar</button>
                <button type="submit" class="bg-indigo-600 text-white font-semibold py-2 px-4 rounded-lg hover:bg-indigo-700 transition">Salvar</button>
            </div>
        </form>
    </div>

<script>
document.addEventListener('DOMContentLoaded', () => {

    let state = {
        isAuthenticated: false,
        currentView: 'landing',
        currentUser: null,
        projects: [],
    };
    
    const mockUsers = {
        'admin@exemplo.com': {
            id: 1,
            email: 'admin@exemplo.com',
            senhaHash: 'hashed_password_for_123456',
            perfil: {
                nome: 'Administrador do Sistema',
                contato: '11987654321',
            }
        }
    };

    const mockProjects = [
        { id: 1, name: 'Desenvolvimento do Backend', description: 'Criar a API REST com Flask e SQLite.', status: 'Em Andamento' },
        { id: 2, name: 'Criação do Frontend', description: 'Desenvolver a interface com HTML, CSS e JS.', status: 'Concluído' },
        { id: 3, name: 'Testes e Deploy', description: 'Realizar testes unitários e de integração.', status: 'A Fazer' },
    ];

    const views = document.querySelectorAll('.view');
    const navLinksContainer = document.getElementById('nav-links');
    const appContainer = document.getElementById('app');
    const welcomeMessage = document.getElementById('welcome-message');
    const profileDetails = document.getElementById('profile-details');
    const projectList = document.getElementById('project-list');
    
    const projectModal = document.getElementById('project-modal');
    const modalBackdrop = document.getElementById('modal-backdrop');
    const projectForm = document.getElementById('project-form');
    const modalTitle = document.getElementById('modal-title');

    let statusChart = null;

    function renderNav() {
        let links = '';
        if (state.isAuthenticated) {
            links = `
                <div class="flex items-center space-x-4">
                    <span class="text-slate-600">Olá, <span class="font-semibold">${state.currentUser.perfil.nome.split(' ')[0]}</span></span>
                    <button id="logout-btn" class="bg-slate-200 text-slate-700 font-semibold py-2 px-4 rounded-lg hover:bg-slate-300 transition">Sair</button>
                </div>
            `;
        } else {
            links = `
                <div class="flex items-center space-x-2">
                    <button data-target="login-view" class="nav-button font-medium text-slate-600 hover:text-indigo-600 transition px-3 py-2">Login</button>
                    <button data-target="signup-view" class="nav-button bg-indigo-600 text-white font-semibold py-2 px-4 rounded-lg hover:bg-indigo-700 transition">Cadastre-se Grátis</button>
                </div>
            `;
        }
        navLinksContainer.innerHTML = links;
    }
    
    function renderView() {
        views.forEach(view => {
            view.classList.remove('active');
            if (view.id === state.currentView + '-view') {
                view.classList.add('active');
            }
        });
    }

    function renderDashboard() {
        if (state.isAuthenticated) {
            welcomeMessage.textContent = `Bem-vindo(a) de volta, ${state.currentUser.perfil.nome}!`;
            profileDetails.innerHTML = `
                <p><strong>Nome:</strong> ${state.currentUser.perfil.nome}</p>
                <p><strong>Email:</strong> ${state.currentUser.email}</p>
                <p><strong>Contato:</strong> ${state.currentUser.perfil.contato}</p>
            `;
            renderProjects();
            renderChart();
        }
    }
    
    function renderProjects() {
        if (state.projects.length === 0) {
            projectList.innerHTML = `<div class="text-center py-12 px-6 bg-slate-50 rounded-lg">
                <h3 class="font-semibold text-slate-800">Nenhum projeto encontrado.</h3>
                <p class="text-slate-500 mt-1">Clique em "Novo Projeto" para começar a organizar seu trabalho.</p>
            </div>`;
            return;
        }

        projectList.innerHTML = state.projects.map(p => `
            <div class="project-item border border-slate-200 p-4 rounded-lg flex justify-between items-center transition hover:shadow-md hover:border-indigo-200">
                <div>
                    <h3 class="font-bold text-lg">${p.name}</h3>
                    <p class="text-slate-600 text-sm">${p.description}</p>
                </div>
                <div class="flex items-center gap-4">
                    <span class="text-sm font-medium px-3 py-1 rounded-full ${p.status === 'Concluído' ? 'bg-green-100 text-green-800' : p.status === 'Em Andamento' ? 'bg-yellow-100 text-yellow-800' : 'bg-slate-100 text-slate-800'}">
                        ${p.status}
                    </span>
                    <button data-id="${p.id}" class="edit-project-btn text-slate-500 hover:text-indigo-600">Editar</button>
                    <button data-id="${p.id}" class="delete-project-btn text-slate-500 hover:text-red-600">Excluir</button>
                </div>
            </div>
        `).join('');
    }

    function renderChart() {
        const ctx = document.getElementById('project-status-chart').getContext('2d');
        const statusCounts = state.projects.reduce((acc, p) => {
            acc[p.status] = (acc[p.status] || 0) + 1;
            return acc;
        }, {});
        
        const data = {
            labels: Object.keys(statusCounts),
            datasets: [{
                label: 'Projetos',
                data: Object.values(statusCounts),
                backgroundColor: [
                    '#d1d5db',
                    '#f59e0b',
                    '#10b981',
                ],
                borderColor: '#fff',
                borderWidth: 2,
            }]
        };

        if (statusChart) {
            statusChart.data = data;
            statusChart.update();
        } else {
            statusChart = new Chart(ctx, {
                type: 'doughnut',
                data: data,
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: { position: 'bottom' },
                        tooltip: {
                            callbacks: {
                                label: (context) => `${context.label}: ${context.parsed}`
                            }
                        }
                    }
                }
            });
        }
    }

    function navigate(viewName) {
        state.currentView = viewName.replace('-view', '');
        renderAll();
    }

    function handleLogin(e) {
        e.preventDefault();
        const email = document.getElementById('login-email').value;
        const user = mockUsers[email];
        if (user) {
            state.isAuthenticated = true;
            state.currentUser = user;
            state.projects = [...mockProjects];
            navigate('dashboard-view');
        } else {
            alert('Usuário não encontrado. (Use admin@exemplo.com)');
        }
    }

    function handleSignup(e) {
        e.preventDefault();
        const name = document.getElementById('signup-name').value;
        const email = document.getElementById('signup-email').value;
        if (mockUsers[email]) {
            alert('Este email já está cadastrado.');
            return;
        }
        const newUser = {
            id: Date.now(),
            email: email,
            senhaHash: 'some_new_hash',
            perfil: { nome: name, contato: '' }
        };
        mockUsers[email] = newUser;
        state.isAuthenticated = true;
        state.currentUser = newUser;
        state.projects = [];
        navigate('dashboard-view');
    }

    function handleLogout() {
        state.isAuthenticated = false;
        state.currentUser = null;
        state.projects = [];
        navigate('landing-view');
    }

    function openModal(project = null) {
        projectForm.reset();
        if (project) {
            modalTitle.textContent = 'Editar Projeto';
            document.getElementById('project-id').value = project.id;
            document.getElementById('project-name').value = project.name;
            document.getElementById('project-description').value = project.description;
            document.getElementById('project-status').value = project.status;
        } else {
            modalTitle.textContent = 'Adicionar Novo Projeto';
        }
        projectModal.style.display = 'block';
        modalBackdrop.style.display = 'block';
    }

    function closeModal() {
        projectModal.style.display = 'none';
        modalBackdrop.style.display = 'none';
    }

    function handleProjectSubmit(e) {
        e.preventDefault();
        const id = document.getElementById('project-id').value;
        const projectData = {
            name: document.getElementById('project-name').value,
            description: document.getElementById('project-description').value,
            status: document.getElementById('project-status').value
        };

        if (id) {
            const index = state.projects.findIndex(p => p.id == id);
            state.projects[index] = { ...state.projects[index], ...projectData };
        } else {
            projectData.id = Date.now();
            state.projects.push(projectData);
        }
        closeModal();
        renderProjects();
        renderChart();
    }
    
    function handleProjectEdit(id) {
        const project = state.projects.find(p => p.id == id);
        openModal(project);
    }

    function handleProjectDelete(id) {
        if (confirm('Tem certeza que deseja excluir este projeto?')) {
            state.projects = state.projects.filter(p => p.id != id);
            renderProjects();
            renderChart();
        }
    }

    function setupEventListeners() {
        document.body.addEventListener('click', (e) => {
            const target = e.target.closest('[data-target], #logout-btn, #add-project-btn, .edit-project-btn, .delete-project-btn, #cancel-project-btn, #modal-backdrop, #logo');
            if (!target) return;

            if (target.matches('[data-target]')) navigate(target.dataset.target);
            if (target.id === 'logo') navigate(state.isAuthenticated ? 'dashboard-view' : 'landing-view');
            if (target.id === 'logout-btn') handleLogout();
            if (target.id === 'add-project-btn') openModal();
            if (target.matches('.edit-project-btn')) handleProjectEdit(target.dataset.id);
            if (target.matches('.delete-project-btn')) handleProjectDelete(target.dataset.id);
            if (target.id === 'cancel-project-btn' || target.id === 'modal-backdrop') closeModal();
        });

        document.getElementById('login-form').addEventListener('submit', handleLogin);
        document.getElementById('signup-form').addEventListener('submit', handleSignup);
        projectForm.addEventListener('submit', handleProjectSubmit);
    }

    function renderAll() {
        renderNav();
        renderView();
        if(state.currentView === 'dashboard') {
            renderDashboard();
        }
    }
    
    setupEventListeners();
    renderAll();
});
</script>

</body>
</html>


